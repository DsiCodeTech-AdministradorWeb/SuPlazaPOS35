<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>